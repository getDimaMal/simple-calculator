(()=>{"use strict";var n={494:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(354),o=t.n(r),a=t(314),s=t.n(a)()(o());s.push([n.id,".btn{width:calc(25% - 10px);box-sizing:border-box;margin:5px;padding:20px;border:none;border-radius:5px;background-color:#e0e1e6;font-size:1.5em;text-align:center;cursor:pointer}.btn:hover{background-color:#c4c6cf}.btn:active{transform:translateY(2px)}","",{version:3,sources:["webpack://./src/components/Button/butoon.scss","webpack://./src/styles/_variables.scss"],names:[],mappings:"AAEA,KACE,sBAAA,CACA,qBAAA,CAEA,UAAA,CACA,YAAA,CAEA,WAAA,CACA,iBAAA,CACA,wBCRwB,CDUxB,eAAA,CACA,iBAAA,CAEA,cAAA,CAEA,WACE,wBAAA,CAGF,YACE,yBAAA",sourcesContent:['@import "src/styles/variables";\n\n.btn {\n  width: calc(25% - 10px);\n  box-sizing: border-box;\n\n  margin: 5px;\n  padding: 20px;\n\n  border: none;\n  border-radius: 5px;\n  background-color: $button-background-color;\n\n  font-size: 1.5em;\n  text-align: center;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: darken($button-background-color, 10%);\n  }\n\n  &:active {\n    transform: translateY(2px);\n  }\n}\n',"//Colors\n$body-background-color: #f3f3f3;\n\n$button-background-color: #e0e1e6;\n\n$display-background-color: #fff;\n\n$font-color: #000;\n"],sourceRoot:""}]);const i=s},622:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(354),o=t.n(r),a=t(314),s=t.n(a)()(o());s.push([n.id,".display{margin:20px 5px;padding:10px;border-radius:5px;background-color:#fff;font-size:2rem;text-align:right}","",{version:3,sources:["webpack://./src/components/Display/display.scss","webpack://./src/styles/_variables.scss"],names:[],mappings:"AAEA,SACE,eAAA,CACA,YAAA,CAEA,iBAAA,CACA,qBCFyB,CDIzB,cAAA,CACA,gBAAA",sourcesContent:['@import "src/styles/variables";\n\n.display {\n  margin: 20px 5px;\n  padding: 10px;\n\n  border-radius: 5px;\n  background-color: $display-background-color;\n\n  font-size: 2rem;\n  text-align: right;\n}',"//Colors\n$body-background-color: #f3f3f3;\n\n$button-background-color: #e0e1e6;\n\n$display-background-color: #fff;\n\n$font-color: #000;\n"],sourceRoot:""}]);const i=s},664:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(354),o=t.n(r),a=t(314),s=t.n(a)()(o());s.push([n.id,'*{margin:0;padding:0}html{font-size:16px;font-family:"Helvetica Neue",sans-serif;color:#000}body{background-color:#f3f3f3}',"",{version:3,sources:["webpack://./src/styles/main.scss","webpack://./src/styles/_variables.scss"],names:[],mappings:"AAEA,EACE,QAAA,CACA,SAAA,CAGF,KACE,cAAA,CACA,uCAAA,CACA,UCHW,CDMb,KACE,wBCbsB",sourcesContent:['@import "variables";\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-size: 16px;\n  font-family: "Helvetica Neue", sans-serif;\n  color: $font-color;\n}\n\nbody {\n  background-color: $body-background-color;\n}',"//Colors\n$body-background-color: #f3f3f3;\n\n$button-background-color: #e0e1e6;\n\n$display-background-color: #fff;\n\n$font-color: #000;\n"],sourceRoot:""}]);const i=s},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var u=0;u<n.length;u++){var l=[].concat(n[u]);r&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},s=[],i=0;i<n.length;i++){var c=n[i],u=r.base?c[0]+r.base:c[0],l=a[u]||0,p="".concat(u," ").concat(l);a[u]=l+1;var d=t(p),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(f);else{var A=o(f,r);r.byIndex=i,e.splice(i,0,{identifier:p,updater:A,references:1})}s.push(p)}return s}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=t(a[s]);e[i].references--}for(var c=r(n,o),u=0;u<a.length;u++){var l=t(a[u]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),a=t(659),s=t.n(a),i=t(56),c=t.n(i),u=t(540),l=t.n(u),p=t(113),d=t.n(p),f=t(664),A={};A.styleTagTransform=d(),A.setAttributes=c(),A.insert=s().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=l(),e()(f.A,A),f.A&&f.A.locals&&f.A.locals;var b=t(622),v={};v.styleTagTransform=d(),v.setAttributes=c(),v.insert=s().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=l(),e()(b.A,v),b.A&&b.A.locals&&b.A.locals;const h=function(){function n(n){this.props=n;var e=this.props.value;this.display=document.createElement("div"),this.display.classList.add("display"),this.display.innerText=e}return n.prototype.update=function(n){this.display.innerText=n},n.prototype.render=function(){return this.display},n}();var y=function(){function n(n){this.props=n,this.keypad=document.createElement("div")}return n.prototype.renderButtons=function(){for(var n=this.props,e=n.keys,t=n.handlers,r=n.Button,o=function(n,e){var o=new r({label:n,onClick:function(){return t[e](n)}});a.keypad.append(o.render())},a=this,s=0,i=e;s<i.length;s++){var c=i[s];o(c.label,c.type)}},n.prototype.render=function(){return this.renderButtons(),this.keypad},n}();const m=y;var g=t(494),C={};C.styleTagTransform=d(),C.setAttributes=c(),C.insert=s().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),e()(g.A,C),g.A&&g.A.locals&&g.A.locals;const x=function(){function n(n){this.props=n;var e=this.props,t=e.label,r=e.onClick;this.button=document.createElement("button"),this.button.innerText=t,this.button.classList.add("btn"),this.button.addEventListener("click",r)}return n.prototype.render=function(){return this.button},n}();var k=function(n){var e=this;this.props=n,this.displayUpdate=function(n){e.display.update(n)},this.render=function(){var n=document.createElement("div");return n.append(e.display.render()),n.append(e.keypad.render()),n};var t=this.props,r=t.keys,o=t.handlers;this.display=new h({value:"0"}),this.keypad=new m({keys:r,handlers:o,Button:x})},E=function(){var n=this;this.currentResult=0,this.currentInput="",this.currantOperator=null,this.calculate=function(){var e=parseFloat(n.currentInput);return{"+":function(n,e){return n+e},"-":function(n,e){return n-e},"*":function(n,e){return n*e},"/":function(n,e){return n/e}}[n.currantOperator](n.currentResult,e)},this.handleOperator=function(e){return n.currentInput&&(n.currentResult=n.currantOperator?n.calculate():parseFloat(n.currentInput)),n.currantOperator=e,n.currentInput="",n.currentResult},this.getPercentage=function(){var e=(n.currentResult||1)*parseFloat(n.currentInput)/100;return n.currentInput=String(e),e},this.appendChar=function(e){if("."!==e||!n.currentInput.includes(".")){var t=n.currentInput+e;n.currentInput="."===t?"0.":t}return n.currentInput},this.deleteLastChar=function(){var e=n.currentInput.slice(0,-1);return n.currentInput="0"===e?"":e,n.currentInput},this.toggleSign=function(){if(n.currentInput)return n.currentInput=String(-1*parseFloat(n.currentInput)),n.currentInput},this.reset=function(){return n.currentInput="",n.currantOperator=null,n.currentInput}},I=[{label:"C",type:"function"},{label:"+/-",type:"function"},{label:"%",type:"function"},{label:"/",type:"operator"},{label:"1",type:"value"},{label:"2",type:"value"},{label:"3",type:"value"},{label:"*",type:"operator"},{label:"4",type:"value"},{label:"5",type:"value"},{label:"6",type:"value"},{label:"-",type:"operator"},{label:"7",type:"value"},{label:"8",type:"value"},{label:"9",type:"value"},{label:"+",type:"operator"},{label:"⌫",type:"function"},{label:"0",type:"value"},{label:".",type:"value"},{label:"=",type:"function"}],w=function(){function n(){var n=this;this.displayUpdate=function(e){n.view.displayUpdate(String(e||0))},this.handleValue=function(e){var t=n.model.appendChar(e);n.displayUpdate(t)},this.handleOperator=function(e){n.model.handleOperator(e)},this.handleFunction=function(e){var t={"=":n.model.calculate,"+/-":n.model.toggleSign,"%":n.model.getPercentage,"⌫":n.model.deleteLastChar,C:n.model.reset};if(e in t){var r=t[e]();n.displayUpdate(r)}},this.model=new E,this.view=new k({keys:I,handlers:{value:this.handleValue,operator:this.handleOperator,function:this.handleFunction}})}return n.prototype.render=function(){return this.view.render()},n}(),B=function(){function n(){this.calculator=new w}return n.prototype.render=function(){var n=document.createElement("div");return n.append(this.calculator.render()),n},n}();document.addEventListener("DOMContentLoaded",(function(){var n=new B;document.getElementById("root").append(n.render())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1pYLFNBQVU1SSxLQUFLMkksZUFDZmtCLFNBQVU3SixLQUFLeUosaUJBRzNCLENBaUNKLE9BSEksWUFBQW5DLE9BQUEsV0FDSSxPQUFPdEgsS0FBS3NKLEtBQUtoQyxRQUNyQixFQUNKLEVBL0NBLEdDM0JBLGFBR0ksYUFDSXRILEtBQUs4SixXQUFhLElBQUlDLENBQzFCLENBU0osT0FQSSxZQUFBekMsT0FBQSxXQUNJLElBQU0wQyxFQUFNbEcsU0FBU1csY0FBYyxPQUluQyxPQUZBdUYsRUFBSWhDLE9BQU9oSSxLQUFLOEosV0FBV3hDLFVBRXBCMEMsQ0FDWCxFQUNKLEVBZEEsR0NBQWxHLFNBQVNtRSxpQkFBaUIsb0JBQW9CLFdBQzFDLElBQU0rQixFQUFNLElBQUlDLEVBQ0huRyxTQUFTb0csZUFBZSxRQUNoQ2xDLE9BQU9nQyxFQUFJMUMsU0FDcEIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yLy4vc3JjL2NvbXBvbmVudHMvQnV0dG9uL2J1dG9vbi5zY3NzIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yLy4vc3JjL2NvbXBvbmVudHMvRGlzcGxheS9kaXNwbGF5LnNjc3MiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9zdHlsZXMvbWFpbi5zY3NzPzY5YzciLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvY29tcG9uZW50cy9EaXNwbGF5L2Rpc3BsYXkuc2Nzcz8zZDdiIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yLy4vc3JjL2NvbXBvbmVudHMvRGlzcGxheS9pbmRleC50cyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9jb21wb25lbnRzL0Rpc3BsYXkvRGlzcGxheS50cyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9jb21wb25lbnRzL0tleXBhZC9LZXlwYWQudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvY29tcG9uZW50cy9LZXlwYWQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvY29tcG9uZW50cy9CdXR0b24vYnV0b29uLnNjc3M/ZjRlYyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9jb21wb25lbnRzL0J1dHRvbi9pbmRleC50cyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9jb21wb25lbnRzL0J1dHRvbi9CdXR0b24udHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvYXBwL3ZpZXdzL2NhbGN1bGF0b3Iudmlldy50cyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9hcHAvbW9kZWxzL2NhbGN1bGF0b3IubW9kZWwudHMiLCJ3ZWJwYWNrOi8vc2ltcGxlLWNhbGN1bGF0b3IvLi9zcmMvYXBwL2NvbnRyb2xsZXJzL2NhbGN1bGF0b3IuY29udHJvbGxlci50cyIsIndlYnBhY2s6Ly9zaW1wbGUtY2FsY3VsYXRvci8uL3NyYy9hcHAvYXBwLnRzIiwid2VicGFjazovL3NpbXBsZS1jYWxjdWxhdG9yLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuYnRue3dpZHRoOmNhbGMoMjUlIC0gMTBweCk7Ym94LXNpemluZzpib3JkZXItYm94O21hcmdpbjo1cHg7cGFkZGluZzoyMHB4O2JvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQtY29sb3I6I2UwZTFlNjtmb250LXNpemU6MS41ZW07dGV4dC1hbGlnbjpjZW50ZXI7Y3Vyc29yOnBvaW50ZXJ9LmJ0bjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNjNGM2Y2Z9LmJ0bjphY3RpdmV7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMnB4KX1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL0J1dHRvbi9idXRvb24uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlcy9fdmFyaWFibGVzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUEsS0FDRSxzQkFBQSxDQUNBLHFCQUFBLENBRUEsVUFBQSxDQUNBLFlBQUEsQ0FFQSxXQUFBLENBQ0EsaUJBQUEsQ0FDQSx3QkNSd0IsQ0RVeEIsZUFBQSxDQUNBLGlCQUFBLENBRUEsY0FBQSxDQUVBLFdBQ0Usd0JBQUEsQ0FHRixZQUNFLHlCQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgXFxcInNyYy9zdHlsZXMvdmFyaWFibGVzXFxcIjtcXG5cXG4uYnRuIHtcXG4gIHdpZHRoOiBjYWxjKDI1JSAtIDEwcHgpO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG5cXG4gIG1hcmdpbjogNXB4O1xcbiAgcGFkZGluZzogMjBweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICRidXR0b24tYmFja2dyb3VuZC1jb2xvcjtcXG5cXG4gIGZvbnQtc2l6ZTogMS41ZW07XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuXFxuICAmOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRidXR0b24tYmFja2dyb3VuZC1jb2xvciwgMTAlKTtcXG4gIH1cXG5cXG4gICY6YWN0aXZlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJweCk7XFxuICB9XFxufVxcblwiLFwiLy9Db2xvcnNcXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xcblxcbiRidXR0b24tYmFja2dyb3VuZC1jb2xvcjogI2UwZTFlNjtcXG5cXG4kZGlzcGxheS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcblxcbiRmb250LWNvbG9yOiAjMDAwO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLmRpc3BsYXl7bWFyZ2luOjIwcHggNXB4O3BhZGRpbmc6MTBweDtib3JkZXItcmFkaXVzOjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Zm9udC1zaXplOjJyZW07dGV4dC1hbGlnbjpyaWdodH1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL0Rpc3BsYXkvZGlzcGxheS5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL192YXJpYWJsZXMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQSxTQUNFLGVBQUEsQ0FDQSxZQUFBLENBRUEsaUJBQUEsQ0FDQSxxQkNGeUIsQ0RJekIsY0FBQSxDQUNBLGdCQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgXFxcInNyYy9zdHlsZXMvdmFyaWFibGVzXFxcIjtcXG5cXG4uZGlzcGxheSB7XFxuICBtYXJnaW46IDIwcHggNXB4O1xcbiAgcGFkZGluZzogMTBweDtcXG5cXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICRkaXNwbGF5LWJhY2tncm91bmQtY29sb3I7XFxuXFxuICBmb250LXNpemU6IDJyZW07XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG59XCIsXCIvL0NvbG9yc1xcbiRib2R5LWJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7XFxuXFxuJGJ1dHRvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMWU2O1xcblxcbiRkaXNwbGF5LWJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuXFxuJGZvbnQtY29sb3I6ICMwMDA7XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqe21hcmdpbjowO3BhZGRpbmc6MH1odG1se2ZvbnQtc2l6ZToxNnB4O2ZvbnQtZmFtaWx5OlwiSGVsdmV0aWNhIE5ldWVcIixzYW5zLXNlcmlmO2NvbG9yOiMwMDB9Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiNmM2YzZjN9YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL21haW4uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3N0eWxlcy9fdmFyaWFibGVzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUEsRUFDRSxRQUFBLENBQ0EsU0FBQSxDQUdGLEtBQ0UsY0FBQSxDQUNBLHVDQUFBLENBQ0EsVUNIVyxDRE1iLEtBQ0Usd0JDYnNCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgXFxcInZhcmlhYmxlc1xcXCI7XFxuXFxuKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cXG5odG1sIHtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiSGVsdmV0aWNhIE5ldWVcXFwiLCBzYW5zLXNlcmlmO1xcbiAgY29sb3I6ICRmb250LWNvbG9yO1xcbn1cXG5cXG5ib2R5IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICRib2R5LWJhY2tncm91bmQtY29sb3I7XFxufVwiLFwiLy9Db2xvcnNcXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xcblxcbiRidXR0b24tYmFja2dyb3VuZC1jb2xvcjogI2UwZTFlNjtcXG5cXG4kZGlzcGxheS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcblxcbiRmb250LWNvbG9yOiAjMDAwO1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZGlzcGxheS5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZGlzcGxheS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgRGlzcGxheSB9IGZyb20gJy4vRGlzcGxheSc7XG5cbmV4cG9ydCBkZWZhdWx0IERpc3BsYXkiLCJpbXBvcnQgJy4vZGlzcGxheS5zY3NzJztcblxuaW50ZXJmYWNlIERpc3BsYXlQcm9wcyB7XG4gICAgdmFsdWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIERpc3BsYXkge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZGlzcGxheTogSFRNTERpdkVsZW1lbnQ7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3BzOiBEaXNwbGF5UHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICB0aGlzLmRpc3BsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdGhpcy5kaXNwbGF5LmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXknKTtcbiAgICAgICAgdGhpcy5kaXNwbGF5LmlubmVyVGV4dCA9IHZhbHVlO1xuICAgIH1cblxuICAgIHVwZGF0ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZGlzcGxheS5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpc3BsYXk7XG4gICAgfVxufSIsImltcG9ydCBCdXR0b24gZnJvbSBcIi4uL0J1dHRvblwiO1xuXG50eXBlIEtleVR5cGVzID0gJ3ZhbHVlJyB8ICdvcGVyYXRvcicgfCAnZnVuY3Rpb24nO1xuXG5pbnRlcmZhY2UgS2V5cGFkUHJvcHMge1xuICAgIGtleXM6IHsgbGFiZWw6IHN0cmluZywgdHlwZTogS2V5VHlwZXMgfVtdO1xuICAgIGhhbmRsZXJzOiBSZWNvcmQ8S2V5VHlwZXMsICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkPjtcbiAgICBCdXR0b246IHR5cGVvZiBCdXR0b25cbn1cblxuZXhwb3J0IGNsYXNzIEtleXBhZCB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBrZXlwYWQ6IEhUTUxEaXZFbGVtZW50O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwcm9wczogS2V5cGFkUHJvcHMpIHtcbiAgICAgICAgdGhpcy5rZXlwYWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbmRlckJ1dHRvbnMoKSB7XG4gICAgICAgIGNvbnN0IHsga2V5cywgaGFuZGxlcnMsIEJ1dHRvbiB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBmb3IgKGNvbnN0IHsgbGFiZWwsIHR5cGUgfSBvZiBrZXlzKSB7XG4gICAgICAgICAgICBjb25zdCBidXR0b24gPSBuZXcgQnV0dG9uKHsgbGFiZWwsIG9uQ2xpY2s6ICgpID0+IGhhbmRsZXJzW3R5cGVdKGxhYmVsKSB9KTtcbiAgICAgICAgICAgIHRoaXMua2V5cGFkLmFwcGVuZChidXR0b24ucmVuZGVyKCkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0aGlzLnJlbmRlckJ1dHRvbnMoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMua2V5cGFkO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBLZXlwYWQgfSBmcm9tICcuL0tleXBhZCc7XG5cbmV4cG9ydCBkZWZhdWx0IEtleXBhZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2J1dG9vbi5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYnV0b29uLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuL0J1dHRvbic7XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiLCJpbXBvcnQgJy4vYnV0b29uLnNjc3MnO1xuXG5pbnRlcmZhY2UgQnV0dG9uUHJvcHMge1xuICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgb25DbGljazogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIEJ1dHRvbiB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBidXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwcm9wczogQnV0dG9uUHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyBsYWJlbCwgb25DbGljayB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICB0aGlzLmJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICB0aGlzLmJ1dHRvbi5pbm5lclRleHQgPSBsYWJlbDtcbiAgICAgICAgdGhpcy5idXR0b24uY2xhc3NMaXN0LmFkZCgnYnRuJyk7XG4gICAgICAgIHRoaXMuYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25DbGljayk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idXR0b247XG4gICAgfVxufSIsImltcG9ydCBEaXNwbGF5IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRGlzcGxheSc7XG5pbXBvcnQgS2V5cGFkIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvS2V5cGFkJztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9CdXR0b24nO1xuXG5cbmludGVyZmFjZSBDYWxjdWxhdG9yVmlld1Byb3BzIHtcbiAgICBrZXlzOiBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8dHlwZW9mIEtleXBhZD5bMF1bJ2tleXMnXTtcbiAgICBoYW5kbGVyczogQ29uc3RydWN0b3JQYXJhbWV0ZXJzPHR5cGVvZiBLZXlwYWQ+WzBdWydoYW5kbGVycyddO1xufVxuXG5leHBvcnQgY2xhc3MgQ2FsY3VsYXRvclZpZXcge1xuICAgIHByaXZhdGUgZGlzcGxheTtcbiAgICBwcml2YXRlIGtleXBhZDtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJvcHM6IENhbGN1bGF0b3JWaWV3UHJvcHMpIHtcbiAgICAgICAgY29uc3QgeyAga2V5cywgaGFuZGxlcnMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgdGhpcy5kaXNwbGF5ID0gbmV3IERpc3BsYXkoeyB2YWx1ZTogJzAnIH0pO1xuICAgICAgICB0aGlzLmtleXBhZCA9IG5ldyBLZXlwYWQoeyBrZXlzLCBoYW5kbGVycywgQnV0dG9uIH0pO1xuICAgIH1cblxuICAgIGRpc3BsYXlVcGRhdGUgPSAodmFsdWU6IHN0cmluZykgPT4ge1xuICAgICAgICB0aGlzLmRpc3BsYXkudXBkYXRlKHZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmVuZGVyID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZCh0aGlzLmRpc3BsYXkucmVuZGVyKCkpO1xuICAgICAgICBjb250YWluZXIuYXBwZW5kKHRoaXMua2V5cGFkLnJlbmRlcigpKTtcblxuICAgICAgICByZXR1cm4gY29udGFpbmVyO1xuICAgIH07XG59IiwiZXhwb3J0IHR5cGUgT3BlcmF0b3JUeXBlcyA9ICcrJyB8ICctJyB8ICcqJyB8ICcvJ1xuXG5cbmV4cG9ydCBjbGFzcyBDYWxjdWxhdG9yTW9kZWwge1xuICAgIHByaXZhdGUgY3VycmVudFJlc3VsdCA9IDA7XG4gICAgcHJpdmF0ZSBjdXJyZW50SW5wdXQgPSAnJztcbiAgICBwcml2YXRlIGN1cnJhbnRPcGVyYXRvcjogT3BlcmF0b3JUeXBlcyB8IG51bGwgPSBudWxsO1xuXG4gICAgY2FsY3VsYXRlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBhY3Rpb25zOiBSZWNvcmQ8T3BlcmF0b3JUeXBlcywgKGE6IG51bWJlciwgYjogbnVtYmVyKSA9PiBudW1iZXI+ID0ge1xuICAgICAgICAgICAgJysnOiAoYSwgYikgPT4gYSArIGIsXG4gICAgICAgICAgICAnLSc6IChhLCBiKSA9PiBhIC0gYixcbiAgICAgICAgICAgICcqJzogKGEsIGIpID0+IGEgKiBiLFxuICAgICAgICAgICAgJy8nOiAoYSwgYikgPT4gYSAvIGIsXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgaW5wdXQgPSBwYXJzZUZsb2F0KHRoaXMuY3VycmVudElucHV0KTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbnNbdGhpcy5jdXJyYW50T3BlcmF0b3JdKHRoaXMuY3VycmVudFJlc3VsdCwgaW5wdXQpO1xuICAgIH07XG5cbiAgICBoYW5kbGVPcGVyYXRvciA9IChvcGVyYXRvcjogT3BlcmF0b3JUeXBlcykgPT4ge1xuICAgICAgICBpZiAodGhpcy5jdXJyZW50SW5wdXQpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFJlc3VsdCA9IHRoaXMuY3VycmFudE9wZXJhdG9yID8gdGhpcy5jYWxjdWxhdGUoKSA6IHBhcnNlRmxvYXQodGhpcy5jdXJyZW50SW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VycmFudE9wZXJhdG9yID0gb3BlcmF0b3I7XG4gICAgICAgIHRoaXMuY3VycmVudElucHV0ID0gJyc7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFJlc3VsdDtcbiAgICB9O1xuXG4gICAgZ2V0UGVyY2VudGFnZSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gKHRoaXMuY3VycmVudFJlc3VsdCB8fCAxKSAqIHBhcnNlRmxvYXQodGhpcy5jdXJyZW50SW5wdXQpIC8gMTAwO1xuICAgICAgICB0aGlzLmN1cnJlbnRJbnB1dCA9IFN0cmluZyhyZXN1bHQpO1xuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIGFwcGVuZENoYXIgPSAoaW5wdXQ6IHN0cmluZykgPT4ge1xuICAgICAgICBpZiAoaW5wdXQgIT09ICcuJyB8fCAhdGhpcy5jdXJyZW50SW5wdXQuaW5jbHVkZXMoJy4nKSkge1xuICAgICAgICAgICAgY29uc3Qgc3RyID0gdGhpcy5jdXJyZW50SW5wdXQgKyBpbnB1dDtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudElucHV0ID0gc3RyID09PSAnLicgPyAnMC4nIDogc3RyO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmN1cnJlbnRJbnB1dDtcbiAgICB9O1xuXG4gICAgZGVsZXRlTGFzdENoYXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0ciA9IHRoaXMuY3VycmVudElucHV0LnNsaWNlKDAsIC0xKTtcbiAgICAgICAgdGhpcy5jdXJyZW50SW5wdXQgPSBzdHIgPT09ICcwJyA/ICcnIDogc3RyO1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50SW5wdXQ7XG4gICAgfTtcblxuICAgIHRvZ2dsZVNpZ24gPSAoKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5jdXJyZW50SW5wdXQpIHJldHVybjtcblxuICAgICAgICB0aGlzLmN1cnJlbnRJbnB1dCA9IFN0cmluZyhwYXJzZUZsb2F0KHRoaXMuY3VycmVudElucHV0KSAqIC0xKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudElucHV0O1xuICAgIH07XG5cbiAgICByZXNldCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5jdXJyZW50SW5wdXQgPSAnJztcbiAgICAgICAgdGhpcy5jdXJyYW50T3BlcmF0b3IgPSBudWxsO1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50SW5wdXQ7XG4gICAgfTtcbn0iLCJpbXBvcnQgeyBDYWxjdWxhdG9yVmlldyB9IGZyb20gJy4uL3ZpZXdzL2NhbGN1bGF0b3Iudmlldyc7XG5pbXBvcnQgeyBDYWxjdWxhdG9yTW9kZWwsIE9wZXJhdG9yVHlwZXMgfSBmcm9tICcuLi9tb2RlbHMvY2FsY3VsYXRvci5tb2RlbCc7XG5cbmNvbnN0IGtleXMgPSBbXG4gICAgeyBsYWJlbDogJ0MnLCB0eXBlOiAnZnVuY3Rpb24nIH0sXG4gICAgeyBsYWJlbDogJysvLScsIHR5cGU6ICdmdW5jdGlvbicgfSxcbiAgICB7IGxhYmVsOiAnJScsIHR5cGU6ICdmdW5jdGlvbicgfSxcbiAgICB7IGxhYmVsOiAnLycsIHR5cGU6ICdvcGVyYXRvcicgfSxcblxuICAgIHsgbGFiZWw6ICcxJywgdHlwZTogJ3ZhbHVlJyB9LFxuICAgIHsgbGFiZWw6ICcyJywgdHlwZTogJ3ZhbHVlJyB9LFxuICAgIHsgbGFiZWw6ICczJywgdHlwZTogJ3ZhbHVlJyB9LFxuICAgIHsgbGFiZWw6ICcqJywgdHlwZTogJ29wZXJhdG9yJyB9LFxuXG4gICAgeyBsYWJlbDogJzQnLCB0eXBlOiAndmFsdWUnIH0sXG4gICAgeyBsYWJlbDogJzUnLCB0eXBlOiAndmFsdWUnIH0sXG4gICAgeyBsYWJlbDogJzYnLCB0eXBlOiAndmFsdWUnIH0sXG4gICAgeyBsYWJlbDogJy0nLCB0eXBlOiAnb3BlcmF0b3InIH0sXG5cbiAgICB7IGxhYmVsOiAnNycsIHR5cGU6ICd2YWx1ZScgfSxcbiAgICB7IGxhYmVsOiAnOCcsIHR5cGU6ICd2YWx1ZScgfSxcbiAgICB7IGxhYmVsOiAnOScsIHR5cGU6ICd2YWx1ZScgfSxcbiAgICB7IGxhYmVsOiAnKycsIHR5cGU6ICdvcGVyYXRvcicgfSxcblxuICAgIHsgbGFiZWw6ICfijKsnLCB0eXBlOiAnZnVuY3Rpb24nIH0sXG4gICAgeyBsYWJlbDogJzAnLCB0eXBlOiAndmFsdWUnIH0sXG4gICAgeyBsYWJlbDogJy4nLCB0eXBlOiAndmFsdWUnIH0sXG4gICAgeyBsYWJlbDogJz0nLCB0eXBlOiAnZnVuY3Rpb24nIH0sXG5dIGFzIENvbnN0cnVjdG9yUGFyYW1ldGVyczx0eXBlb2YgQ2FsY3VsYXRvclZpZXc+WzBdWydrZXlzJ107XG5cbmV4cG9ydCBjbGFzcyBDYWxjdWxhdG9yQ29udHJvbGxlciB7XG4gICAgcHJpdmF0ZSBtb2RlbDogQ2FsY3VsYXRvck1vZGVsO1xuICAgIHByaXZhdGUgdmlldzogQ2FsY3VsYXRvclZpZXc7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5tb2RlbCA9IG5ldyBDYWxjdWxhdG9yTW9kZWwoKTtcbiAgICAgICAgdGhpcy52aWV3ID0gbmV3IENhbGN1bGF0b3JWaWV3KHtcbiAgICAgICAgICAgIGtleXMsXG4gICAgICAgICAgICBoYW5kbGVyczoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLmhhbmRsZVZhbHVlLFxuICAgICAgICAgICAgICAgIG9wZXJhdG9yOiB0aGlzLmhhbmRsZU9wZXJhdG9yLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uOiB0aGlzLmhhbmRsZUZ1bmN0aW9uLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkaXNwbGF5VXBkYXRlID0gKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIpID0+IHtcbiAgICAgICAgdGhpcy52aWV3LmRpc3BsYXlVcGRhdGUoU3RyaW5nKHZhbHVlIHx8IDApKTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBoYW5kbGVWYWx1ZSA9ICh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMubW9kZWwuYXBwZW5kQ2hhcih2YWx1ZSk7XG4gICAgICAgIHRoaXMuZGlzcGxheVVwZGF0ZShyZXN1bHQpO1xuICAgIH07XG5cbiAgICBwcml2YXRlIGhhbmRsZU9wZXJhdG9yID0gKHZhbHVlOiBPcGVyYXRvclR5cGVzKSA9PiB7XG4gICAgICAgIHRoaXMubW9kZWwuaGFuZGxlT3BlcmF0b3IodmFsdWUpO1xuICAgIH07XG5cbiAgICBwcml2YXRlIGhhbmRsZUZ1bmN0aW9uID0gKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgYWN0aW9uczogUmVjb3JkPHN0cmluZywgKCkgPT4gc3RyaW5nIHwgbnVtYmVyPiA9IHtcbiAgICAgICAgICAgICc9JzogdGhpcy5tb2RlbC5jYWxjdWxhdGUsXG4gICAgICAgICAgICAnKy8tJzogdGhpcy5tb2RlbC50b2dnbGVTaWduLFxuICAgICAgICAgICAgJyUnOiB0aGlzLm1vZGVsLmdldFBlcmNlbnRhZ2UsXG4gICAgICAgICAgICAn4oyrJzogdGhpcy5tb2RlbC5kZWxldGVMYXN0Q2hhcixcbiAgICAgICAgICAgICdDJzogdGhpcy5tb2RlbC5yZXNldCxcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAodmFsdWUgaW4gYWN0aW9ucykge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYWN0aW9uc1t2YWx1ZV0oKTtcbiAgICAgICAgICAgIHRoaXMuZGlzcGxheVVwZGF0ZShyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmlldy5yZW5kZXIoKTtcbiAgICB9XG59IiwiaW1wb3J0IHsgQ2FsY3VsYXRvckNvbnRyb2xsZXIgfSBmcm9tICcuL2NvbnRyb2xsZXJzL2NhbGN1bGF0b3IuY29udHJvbGxlcic7XG5cblxuZXhwb3J0IGNsYXNzIEFwcCB7XG4gICAgcHJpdmF0ZSBjYWxjdWxhdG9yOiBDYWxjdWxhdG9yQ29udHJvbGxlcjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmNhbGN1bGF0b3IgPSBuZXcgQ2FsY3VsYXRvckNvbnRyb2xsZXIoKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKTogSFRNTEVsZW1lbnQge1xuICAgICAgICBjb25zdCBhcHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgICAgICBhcHAuYXBwZW5kKHRoaXMuY2FsY3VsYXRvci5yZW5kZXIoKSk7XG5cbiAgICAgICAgcmV0dXJuIGFwcDtcbiAgICB9XG59IiwiaW1wb3J0ICcuL3N0eWxlcy9tYWluLnNjc3MnO1xuaW1wb3J0IHsgQXBwIH0gZnJvbSAnLi9hcHAvYXBwJztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICBjb25zdCBhcHAgPSBuZXcgQXBwKCk7XG4gICAgY29uc3Qgcm9vdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG4gICAgcm9vdC5hcHBlbmQoYXBwLnJlbmRlcigpKTtcbn0pOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJsb2NhbHMiLCJwcm9wcyIsInZhbHVlIiwiZGlzcGxheSIsImNsYXNzTGlzdCIsImFkZCIsImlubmVyVGV4dCIsInJlbmRlciIsImtleXBhZCIsInJlbmRlckJ1dHRvbnMiLCJrZXlzIiwiaGFuZGxlcnMiLCJCdXR0b24iLCJsYWJlbCIsInR5cGUiLCJidXR0b24iLCJvbkNsaWNrIiwiYXBwZW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRpc3BsYXlVcGRhdGUiLCJjb250YWluZXIiLCJjdXJyZW50UmVzdWx0IiwiY3VycmVudElucHV0IiwiY3VycmFudE9wZXJhdG9yIiwiY2FsY3VsYXRlIiwiaW5wdXQiLCJwYXJzZUZsb2F0IiwiYiIsImhhbmRsZU9wZXJhdG9yIiwib3BlcmF0b3IiLCJnZXRQZXJjZW50YWdlIiwiU3RyaW5nIiwiYXBwZW5kQ2hhciIsImluY2x1ZGVzIiwic3RyIiwiZGVsZXRlTGFzdENoYXIiLCJzbGljZSIsInRvZ2dsZVNpZ24iLCJyZXNldCIsInZpZXciLCJoYW5kbGVWYWx1ZSIsIm1vZGVsIiwiaGFuZGxlRnVuY3Rpb24iLCJhY3Rpb25zIiwiQ2FsY3VsYXRvck1vZGVsIiwiQ2FsY3VsYXRvclZpZXciLCJmdW5jdGlvbiIsImNhbGN1bGF0b3IiLCJDYWxjdWxhdG9yQ29udHJvbGxlciIsImFwcCIsIkFwcCIsImdldEVsZW1lbnRCeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==